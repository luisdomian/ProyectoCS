@model NutriHub.Models.PlanNutricional

@{
    ViewBag.Title = "Create";
}
<div class="container">
    <h2>Create</h2>


    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>PlanNutricional</h4>
            <hr />

            <div class="form-group">
                @Html.LabelFor(model => model.idIngesta, "idIngesta", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("idIngesta", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.idIngesta, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.idAlimento, "idAlimento", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("idAlimento", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.idAlimento, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.idNutriente, "idNutriente", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("idNutriente", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.idNutriente, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.vet, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.vet, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.vet, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.tiempoComida, "tiempoComida", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("tiempoComida", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.tiempoComida, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.porcion, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.porcion, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.porcion, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.proposito, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.proposito, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.proposito, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.dia, "dia", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("dia", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.dia, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-default" />
                </div>
            </div>
        </div>
    }

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>
</div>




    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }

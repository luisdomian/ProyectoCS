@model NutriHub.Models.PacientePlanNutricional

@{
    ViewBag.Title = "Create";
}

<h2>Agregar paciente al plan nutricional</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>PacientePlanNutricional</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group col-md-7">
            @Html.LabelFor(model => model.idPaciente, "id del Paciente", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("idPaciente", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.idPaciente, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group col-md-7">
            @Html.LabelFor(model => model.idPlan, "id del Plan", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("idPlan", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.idPlan, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group col-md-7">
            @Html.LabelFor(model => model.fecha, "Fecha", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.fecha, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.fecha, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group col-md-7">
            @Html.LabelFor(model => model.estado, "Estado", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.estado)
                    @Html.ValidationMessageFor(model => model.estado, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group col-md-7">
            @Html.LabelFor(model => model.kcal, "Kcal", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.kcal, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.kcal, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group col-md-7">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Crear" class="btn btn-primary" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Volver a la lista", "Index")
</div>
